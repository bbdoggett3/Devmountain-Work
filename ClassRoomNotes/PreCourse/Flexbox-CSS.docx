What is flexbox Ben? This would be helpful for you to understand in order to be more successful in doing web design and development.
 
When desinging a flexbox the first thing you need to do is have a “flex container”(this needs to be defined.) This way you can have things stored inside that container which makes it easy to view.
An example of this would like the following:
<div class="flex-container">
  <div>1</div>
  <div>2</div>
  <div>3</div>
</div>

This has 3 flex items that are stored inside the container… think of it like a box Ben. 
*SIDENOTE* Keep this in mind when you are designing. The better oranganizational skills you have, the easier it will be to program. IF you can explain and walk through your code, then it will be easier for you to keep it simple.
Now we can set the parent Element (the class “flex-container”) to become flexible. This is done by setting the display property to flex… 
Example of this:
.flex-container {
  display: flex;
}
The parent element here as other useful properties:
•	flex-direction: This property defines in which direction the container wants to stack the flex items. You can use the term column (which will stack them) or you can use row (which will put them side by side.)
.flex-container {
  display: flex;
  flex-direction: column;
}
•	flex-wrap: This property will determine if the flex items will wrap or not. This is set my the following CSS rule.
.flex-container {
  display: flex;
  flex-wrap: wrap;
}
•	flex-flow: This is a short hand property that is used for combining the flex direction and flex wrap in one property. This is useful if you are using both of the propertied for the parent element that we have been talking about. Here is an example of it.
.flex-container {
  display: flex;
  flex-flow: row wrap;
}
•	justify-content: This is used to align the items. You can use center, flex-start,
flex end, space around, space between. The css format looks as follows:
.flex-container {
  display: flex;
  justify-content: space-between;
}
•	align-items: This is used to align the flex items vertically you can use center, flex-start, flex-end, stretch, and baseline. An example looks as follow:
.flex-container {
  display: flex;
  height: 200px;
  align-items: center;
}
•	align-content: This is used to align the flex lines.
.flex-container {
  display: flex;
  height: 600px;
  flex-wrap: wrap;
  align-content: space-between;
}

If you wanted to find the perfect center of your website then by using your “flex-container” and setting both the justify-content and the align-item properties to center then this is accomplished. Here is an example:
.flex-container {
  display: flex;
  height: 300px;
  justify-content: center;
  align-items: center;
}

Next, Ben we will study about the children. They inherit the parent properties but can also have their own unique properties as well.
Resoucres were found on https://www.w3schools.com/css/css3_flexbox.asp#flex-direction 
